
grammar test

Union(Word typename, Word[] subtypes)
: 'union' .typename ':' .subtypes(':')

Type(Word name, bool optional, bool lst)
: .name .optional('?') .lst('[' ']')

TypedName(Type type, Word name)
: .type .name

NamedPropertyList(Word name, TypedName[] properties)
: .name '(' [.properties(',')] ')'

AbstractTypeDefinition(NamedPropertyList properties)
: 'abstract' .properties

PropertyReference(Word property, Pattern[] delimiter)
: '.' .property ['(' .delimiter ')']

TypeReference(Word type)
: '@' .type

Terminal(String terminal)
: .terminal

Optional(Pattern[] patterns)
: '[' .patterns ']'

PatternList(Pattern[] patterns)
: .patterns

TypeDefinition(NamedPropertyList properties, PatternList[] patterns)
: .properties ':' .patterns(':')

Grammar(Word name)
: 'grammar' .name

ASTify-grammar(Grammar _grammar, Definition[] definitions)
: ._grammar .definitions @EOF

test()
: @ASTify-grammar

union Pattern
: PropertyReference
: TypeReference
: Terminal
: Optional

union Definition
: TypeDefinition
: AbstractTypeDefinition
: Union
